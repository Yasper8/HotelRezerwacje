//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RezerwacjeClient.ReserversionsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReserversionWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class ReserversionWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RezerwacjeClient.ReserversionsServiceReference.CustomerWraper CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RezerwacjeClient.ReserversionsServiceReference.RoomWraper RoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RezerwacjeClient.ReserversionsServiceReference.UserWraper UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RezerwacjeClient.ReserversionsServiceReference.CustomerWraper Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RezerwacjeClient.ReserversionsServiceReference.RoomWraper Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomsField, value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RezerwacjeClient.ReserversionsServiceReference.UserWraper Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class CustomerWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoomWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class RoomWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BathNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BathNo {
            get {
                return this.BathNoField;
            }
            set {
                if ((this.BathNoField.Equals(value) != true)) {
                    this.BathNoField = value;
                    this.RaisePropertyChanged("BathNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedNo {
            get {
                return this.BedNoField;
            }
            set {
                if ((this.BedNoField.Equals(value) != true)) {
                    this.BedNoField = value;
                    this.RaisePropertyChanged("BedNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class UserWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RezerwacjeClient.ReserversionsServiceReference.UserType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RezerwacjeClient.ReserversionsServiceReference.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADMIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReserversionsServiceReference.IReserversionsService")]
    public interface IReserversionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAll", ReplyAction="http://tempuri.org/IReserversionsService/FindAllResponse")]
        RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper[] FindAll(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAll", ReplyAction="http://tempuri.org/IReserversionsService/FindAllResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper[]> FindAllAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindById", ReplyAction="http://tempuri.org/IReserversionsService/FindByIdResponse")]
        RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper FindById(string sessionId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindById", ReplyAction="http://tempuri.org/IReserversionsService/FindByIdResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper> FindByIdAsync(string sessionId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/Save", ReplyAction="http://tempuri.org/IReserversionsService/SaveResponse")]
        int Save(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/Save", ReplyAction="http://tempuri.org/IReserversionsService/SaveResponse")]
        System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAllRooms", ReplyAction="http://tempuri.org/IReserversionsService/FindAllRoomsResponse")]
        RezerwacjeClient.ReserversionsServiceReference.RoomWraper[] FindAllRooms(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAllRooms", ReplyAction="http://tempuri.org/IReserversionsService/FindAllRoomsResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.RoomWraper[]> FindAllRoomsAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAllCustomers", ReplyAction="http://tempuri.org/IReserversionsService/FindAllCustomersResponse")]
        RezerwacjeClient.ReserversionsServiceReference.CustomerWraper[] FindAllCustomers(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/FindAllCustomers", ReplyAction="http://tempuri.org/IReserversionsService/FindAllCustomersResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.CustomerWraper[]> FindAllCustomersAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/isRoomVacant", ReplyAction="http://tempuri.org/IReserversionsService/isRoomVacantResponse")]
        bool isRoomVacant(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserversionsService/isRoomVacant", ReplyAction="http://tempuri.org/IReserversionsService/isRoomVacantResponse")]
        System.Threading.Tasks.Task<bool> isRoomVacantAsync(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReserversionsServiceChannel : RezerwacjeClient.ReserversionsServiceReference.IReserversionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReserversionsServiceClient : System.ServiceModel.ClientBase<RezerwacjeClient.ReserversionsServiceReference.IReserversionsService>, RezerwacjeClient.ReserversionsServiceReference.IReserversionsService {
        
        public ReserversionsServiceClient() {
        }
        
        public ReserversionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReserversionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReserversionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReserversionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper[] FindAll(string sessionId) {
            return base.Channel.FindAll(sessionId);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper[]> FindAllAsync(string sessionId) {
            return base.Channel.FindAllAsync(sessionId);
        }
        
        public RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper FindById(string sessionId, int id) {
            return base.Channel.FindById(sessionId, id);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper> FindByIdAsync(string sessionId, int id) {
            return base.Channel.FindByIdAsync(sessionId, id);
        }
        
        public int Save(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion) {
            return base.Channel.Save(sessionId, reserversion);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion) {
            return base.Channel.SaveAsync(sessionId, reserversion);
        }
        
        public RezerwacjeClient.ReserversionsServiceReference.RoomWraper[] FindAllRooms(string sessionId) {
            return base.Channel.FindAllRooms(sessionId);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.RoomWraper[]> FindAllRoomsAsync(string sessionId) {
            return base.Channel.FindAllRoomsAsync(sessionId);
        }
        
        public RezerwacjeClient.ReserversionsServiceReference.CustomerWraper[] FindAllCustomers(string sessionId) {
            return base.Channel.FindAllCustomers(sessionId);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.ReserversionsServiceReference.CustomerWraper[]> FindAllCustomersAsync(string sessionId) {
            return base.Channel.FindAllCustomersAsync(sessionId);
        }
        
        public bool isRoomVacant(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion) {
            return base.Channel.isRoomVacant(sessionId, reserversion);
        }
        
        public System.Threading.Tasks.Task<bool> isRoomVacantAsync(string sessionId, RezerwacjeClient.ReserversionsServiceReference.ReserversionWraper reserversion) {
            return base.Channel.isRoomVacantAsync(sessionId, reserversion);
        }
    }
}
