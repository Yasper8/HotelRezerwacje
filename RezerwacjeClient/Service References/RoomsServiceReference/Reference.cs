//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RezerwacjeClient.RoomsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoomWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class RoomWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BathNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BathNo {
            get {
                return this.BathNoField;
            }
            set {
                if ((this.BathNoField.Equals(value) != true)) {
                    this.BathNoField = value;
                    this.RaisePropertyChanged("BathNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedNo {
            get {
                return this.BedNoField;
            }
            set {
                if ((this.BedNoField.Equals(value) != true)) {
                    this.BedNoField = value;
                    this.RaisePropertyChanged("BedNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoomsServiceReference.IRoomsService")]
    public interface IRoomsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/FindAll", ReplyAction="http://tempuri.org/IRoomsService/FindAllResponse")]
        RezerwacjeClient.RoomsServiceReference.RoomWraper[] FindAll(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/FindAll", ReplyAction="http://tempuri.org/IRoomsService/FindAllResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.RoomsServiceReference.RoomWraper[]> FindAllAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/FindById", ReplyAction="http://tempuri.org/IRoomsService/FindByIdResponse")]
        RezerwacjeClient.RoomsServiceReference.RoomWraper FindById(string sessionId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/FindById", ReplyAction="http://tempuri.org/IRoomsService/FindByIdResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.RoomsServiceReference.RoomWraper> FindByIdAsync(string sessionId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/Save", ReplyAction="http://tempuri.org/IRoomsService/SaveResponse")]
        int Save(string sessionId, RezerwacjeClient.RoomsServiceReference.RoomWraper room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomsService/Save", ReplyAction="http://tempuri.org/IRoomsService/SaveResponse")]
        System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.RoomsServiceReference.RoomWraper room);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomsServiceChannel : RezerwacjeClient.RoomsServiceReference.IRoomsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomsServiceClient : System.ServiceModel.ClientBase<RezerwacjeClient.RoomsServiceReference.IRoomsService>, RezerwacjeClient.RoomsServiceReference.IRoomsService {
        
        public RoomsServiceClient() {
        }
        
        public RoomsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RezerwacjeClient.RoomsServiceReference.RoomWraper[] FindAll(string sessionId) {
            return base.Channel.FindAll(sessionId);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.RoomsServiceReference.RoomWraper[]> FindAllAsync(string sessionId) {
            return base.Channel.FindAllAsync(sessionId);
        }
        
        public RezerwacjeClient.RoomsServiceReference.RoomWraper FindById(string sessionId, int id) {
            return base.Channel.FindById(sessionId, id);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.RoomsServiceReference.RoomWraper> FindByIdAsync(string sessionId, int id) {
            return base.Channel.FindByIdAsync(sessionId, id);
        }
        
        public int Save(string sessionId, RezerwacjeClient.RoomsServiceReference.RoomWraper room) {
            return base.Channel.Save(sessionId, room);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.RoomsServiceReference.RoomWraper room) {
            return base.Channel.SaveAsync(sessionId, room);
        }
    }
}
