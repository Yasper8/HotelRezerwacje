//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RezerwacjeClient.UsersServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWraper", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    [System.SerializableAttribute()]
    public partial class UserWraper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RezerwacjeClient.UsersServiceReference.UserType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RezerwacjeClient.UsersServiceReference.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/RezerwacjeService")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADMIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsersServiceReference.IUsersService")]
    public interface IUsersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/FindAll", ReplyAction="http://tempuri.org/IUsersService/FindAllResponse")]
        RezerwacjeClient.UsersServiceReference.UserWraper[] FindAll(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/FindAll", ReplyAction="http://tempuri.org/IUsersService/FindAllResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.UsersServiceReference.UserWraper[]> FindAllAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/FindByLogin", ReplyAction="http://tempuri.org/IUsersService/FindByLoginResponse")]
        RezerwacjeClient.UsersServiceReference.UserWraper FindByLogin(string sessionId, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/FindByLogin", ReplyAction="http://tempuri.org/IUsersService/FindByLoginResponse")]
        System.Threading.Tasks.Task<RezerwacjeClient.UsersServiceReference.UserWraper> FindByLoginAsync(string sessionId, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/isAdmin", ReplyAction="http://tempuri.org/IUsersService/isAdminResponse")]
        bool isAdmin(string sessionID, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/isAdmin", ReplyAction="http://tempuri.org/IUsersService/isAdminResponse")]
        System.Threading.Tasks.Task<bool> isAdminAsync(string sessionID, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Save", ReplyAction="http://tempuri.org/IUsersService/SaveResponse")]
        int Save(string sessionId, RezerwacjeClient.UsersServiceReference.UserWraper room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Save", ReplyAction="http://tempuri.org/IUsersService/SaveResponse")]
        System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.UsersServiceReference.UserWraper room);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersServiceChannel : RezerwacjeClient.UsersServiceReference.IUsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersServiceClient : System.ServiceModel.ClientBase<RezerwacjeClient.UsersServiceReference.IUsersService>, RezerwacjeClient.UsersServiceReference.IUsersService {
        
        public UsersServiceClient() {
        }
        
        public UsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RezerwacjeClient.UsersServiceReference.UserWraper[] FindAll(string sessionId) {
            return base.Channel.FindAll(sessionId);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.UsersServiceReference.UserWraper[]> FindAllAsync(string sessionId) {
            return base.Channel.FindAllAsync(sessionId);
        }
        
        public RezerwacjeClient.UsersServiceReference.UserWraper FindByLogin(string sessionId, string login) {
            return base.Channel.FindByLogin(sessionId, login);
        }
        
        public System.Threading.Tasks.Task<RezerwacjeClient.UsersServiceReference.UserWraper> FindByLoginAsync(string sessionId, string login) {
            return base.Channel.FindByLoginAsync(sessionId, login);
        }
        
        public bool isAdmin(string sessionID, string login) {
            return base.Channel.isAdmin(sessionID, login);
        }
        
        public System.Threading.Tasks.Task<bool> isAdminAsync(string sessionID, string login) {
            return base.Channel.isAdminAsync(sessionID, login);
        }
        
        public int Save(string sessionId, RezerwacjeClient.UsersServiceReference.UserWraper room) {
            return base.Channel.Save(sessionId, room);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync(string sessionId, RezerwacjeClient.UsersServiceReference.UserWraper room) {
            return base.Channel.SaveAsync(sessionId, room);
        }
    }
}
